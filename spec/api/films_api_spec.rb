# frozen_string_literal: true

# #Kinopoisk Unofficial API

# The version of the OpenAPI document: 2.0.1
# Contact: support@kinopoiskapiunofficial.tech
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 5.3.1
#

require "spec_helper"
require "json"

# Unit tests for Kuapir::FilmsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe "FilmsApi" do
  before do
    # run before each test
    @api_instance = Kuapir::FilmsApi.new
  end

  after do
    # run after each test
  end

  describe "test an instance of FilmsApi" do
    it "should create an instance of FilmsApi" do
      expect(@api_instance).to be_instance_of(Kuapir::FilmsApi)
    end
  end

  # unit tests for api_v21_films_id_sequels_and_prequels_get
  # получить сиквелы и приквелы для фильма по kinopoisk film id
  # tbd
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @return [Array<FilmSequelsAndPrequelsResponse>]
  describe "api_v21_films_id_sequels_and_prequels_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v21_films_releases_get
  # получить список цифровых релизов
  # Данный эндпоинт возвращает список цифровых релизов. Например https://www.kinopoisk.ru/comingsoon/digital/
  # @param year год релиза
  # @param month месяц релиза
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page номер страницы
  # @return [DigitalReleaseResponse]
  describe "api_v21_films_releases_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v21_films_search_by_keyword_get
  # получить список фильмов по ключевым словам
  # Возвращает список фильмов с пагинацией. Каждая страница содержит не более чем 20 фильмов.
  # @param keyword ключивые слова для поиска
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page номер страницы
  # @return [FilmSearchResponse]
  describe "api_v21_films_search_by_keyword_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_filters_get
  # получить id стран и жанров для использования в /api/v2.2/films
  # Возвращает список id стран и жанров, которые могут быть использованы в /api/v2.2/films
  # @param [Hash] opts the optional parameters
  # @return [FiltersResponse]
  describe "api_v22_films_filters_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_get
  # получить список фильмов по различным фильтрам
  # Возвращает список фильмов с пагинацией. Каждая страница содержит не более чем 20 фильмов. Данный эндпоинт не возращает более 400 фильмов. &lt;i&gt;Используй /api/v2.2/films/filters чтобы получить id стран и жанров.&lt;/i&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :countries список id стран разделенные запятой. Например &lt;i&gt;countries&#x3D;1,2,3&lt;/i&gt;. На данный момент можно указать не более одной страны.
  # @option opts [Array<Integer>] :genres список id жанров разделенные запятой. Например &lt;i&gt;genres&#x3D;1,2,3&lt;/i&gt;. На данный момент можно указать не более одного жанра.
  # @option opts [String] :order сортировка
  # @option opts [String] :type тип фильма
  # @option opts [Integer] :rating_from минимальный рейтинг
  # @option opts [Integer] :rating_to максимальный рейтинг
  # @option opts [Integer] :year_from минимальный год
  # @option opts [Integer] :year_to максимальный год
  # @option opts [String] :imdb_id imdb id
  # @option opts [String] :keyword ключевое слово, которое встречается в названии фильма
  # @option opts [Integer] :page номер страницы
  # @return [FilmSearchByFiltersResponse]
  describe "api_v22_films_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_id_box_office_get
  # получить данные о бюджете и сборах фильма по kinopoisk film id
  # Данный эндпоинт возвращает данные о бюджете и сборах.
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @return [BoxOfficeResponse]
  describe "api_v22_films_id_box_office_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_id_distributions_get
  # получить данные о прокате фильма по kinopoisk film id
  # Данный эндпоинт возвращает данные о прокате в разных странах.
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @return [DistributionResponse]
  describe "api_v22_films_id_distributions_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_id_facts_get
  # получить данные о фактах и ошибках в фильме по kinopoisk film id
  # Данный эндпоинт возвращает список фактов и ошибок в фильме. &lt;br&gt; type - &lt;b&gt;FACT&lt;/b&gt;, обозначает интересный факт о фильме. &lt;br&gt; type - &lt;b&gt;BLOOPER&lt;/b&gt;, обозначает ошибку в фильме.
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @return [FactResponse]
  describe "api_v22_films_id_facts_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_id_get
  # получить данные о фильме по kinopoisk id
  # Данный эндпоинт возвращает базовые данные о фильме. Поле &lt;b&gt;lastSync&lt;/b&gt; показывает дату последнего обновления данных.
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @return [Film]
  describe "api_v22_films_id_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_id_images_get
  # получить изображения(кадры, постеры, фан-арты, обои и т.д.) связанные с фильмом по kinopoisk film id
  # Данный эндпоинт возвращает изображения связанные с фильмом с пагинацией. Каждая страница содержит &lt;b&gt;не более чем 20 фильмов&lt;/b&gt;.&lt;/br&gt; Доступные изображения:&lt;/br&gt; &lt;ul&gt; &lt;li&gt;STILL - кадры&lt;/li&gt; &lt;li&gt;SHOOTING - изображения со съемок&lt;/li&gt; &lt;li&gt;POSTER - постеры&lt;/li&gt; &lt;li&gt;FAN_ART - фан-арты&lt;/li&gt; &lt;li&gt;PROMO - промо&lt;/li&gt; &lt;li&gt;CONCEPT - концепт-арты&lt;/li&gt; &lt;li&gt;WALLPAPER - обои&lt;/li&gt; &lt;li&gt;COVER - обложки&lt;/li&gt; &lt;li&gt;SCREENSHOT - скриншоты&lt;/li&gt; &lt;/ul&gt;
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type тип изображения
  # @option opts [Integer] :page номер страницы
  # @return [ImageResponse]
  describe "api_v22_films_id_images_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_id_seasons_get
  # получить данные о сезонах для сериала по kinopoisk film id
  # Данный эндпоинт возвращает данные о сезонах для сериала.
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @return [SeasonResponse]
  describe "api_v22_films_id_seasons_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_id_similars_get
  # получить список похожих фильмов по kinopoisk film id
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @return [RelatedFilmResponse]
  describe "api_v22_films_id_similars_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_id_videos_get
  # получить трейлеры,тизеры,видео для фильма по kinopoisk film id
  # Данный эндпоинт возвращает трейлеры,тизеры,видео для фильма по kinopoisk film id. В данный момент доступно два site:  &lt;br/&gt; &lt;ul&gt;&lt;li&gt;YOUTUBE - в этом случае &lt;b&gt;url&lt;/b&gt; это просто ссылка на youtube видео.&lt;/li&gt;&lt;li&gt;KINOPOISK_WIDGET - в этом случае &lt;b&gt;url&lt;/b&gt; это ссылка на кинопоиск виджет. Например https://widgets.kinopoisk.ru/discovery/trailer/123573?onlyPlayer&#x3D;1&amp;autoplay&#x3D;1&amp;cover&#x3D;1. Если вы хотите вставить этот виджет на вашу страницу, вы можете сделать следующее:  &lt;br/&gt;&lt;br/&gt;&amp;lt;script src&#x3D;&amp;quot;https://unpkg.com/@ungap/custom-elements-builtin&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&amp;lt;script type&#x3D;&amp;quot;module&amp;quot; src&#x3D;&amp;quot;https://unpkg.com/x-frame-bypass&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&amp;lt;iframe is&#x3D;&amp;quot;x-frame-bypass&amp;quot; src&#x3D;&amp;quot;https://widgets.kinopoisk.ru/discovery/trailer/167560?onlyPlayer&#x3D;1&amp;amp;autoplay&#x3D;1&amp;amp;cover&#x3D;1&amp;quot; width&#x3D;&amp;quot;500&amp;quot; height&#x3D;&amp;quot;500&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/li&gt;&lt;/ul&gt;
  # @param id kinopoisk film id
  # @param [Hash] opts the optional parameters
  # @return [VideoResponse]
  describe "api_v22_films_id_videos_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_premieres_get
  # получить список кинопремьер
  # Данный эндпоинт возвращает список кинопремьер. Например https://www.kinopoisk.ru/premiere/
  # @param year год релиза
  # @param month месяц релиза
  # @param [Hash] opts the optional parameters
  # @return [PremiereResponse]
  describe "api_v22_films_premieres_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v22_films_top_get
  # получить список фильмов из различных топов или коллекций. Например https://www.kinopoisk.ru/top/lists/58/
  # Возвращает список фильмов с пагинацией. Каждая страница содержит не более чем 20 фильмов.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type тип топа или коллекции
  # @option opts [Integer] :page номер страницы
  # @return [FilmTopResponse]
  describe "api_v22_films_top_get test" do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end
end
